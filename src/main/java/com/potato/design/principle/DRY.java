package com.potato.design.principle;

/**
 * @author dehuab
 * <p>
 * 英文描述为：Don’t Repeat Yourself。中文直译为：不要重复自己。将它应用在编程中，可以理解为：不要写重复的代码。
 * 实现逻辑重复、功能语义重复、代码执行重复。实现逻辑重复，但功能语义不重复的代码，并不违反 DRY 原则。实现逻辑不重复，但功能语义重复的代码，也算是违反 DRY 原则。除此之外，代码执行重复也算是违反 DRY 原则。
 * </p>
 * <p>
 * 提高代码可复用性的一些方法：
 * 减少代码耦合
 * 满足单一职责原则
 * 模块化
 * 业务与非业务逻辑分离
 * 通用代码下沉
 * 继承、多态、抽象、封装
 * 应用模板等设计模式
 * 除了上面讲到的这些方法之外，复用意识也非常重要。在设计每个模块、类、函数的时候，要像设计一个外部 API 一样去思考它的复用性。
 * </p>
 */
public class DRY {
}
