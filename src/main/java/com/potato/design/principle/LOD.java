package com.potato.design.principle;

/**
 * @author dehuab
 * <p>
 * 迪米特法则的英文翻译是：Law of Demeter，缩写是 LOD。
 * 它还有另外一个更加达意的名字，叫作最小知识原则，英文翻译为：The Least Knowledge Principle。
 * 基于最小接口而非最大实现编程
 * </p>
 * <p>
 * “高内聚、松耦合”是一个非常重要的设计思想，能够有效提高代码的可读性和可维护性，缩小功能改动导致的代码改动范围。“高内聚”用来指导类本身的设计，“松耦合”用来指导类与类之间依赖关系的设计。
 * 所谓高内聚，就是指相近的功能应该放到同一个类中，不相近的功能不要放到同一类中。
 * 相近的功能往往会被同时修改，放到同一个类中，修改会比较集中。
 * 所谓松耦合指的是，在代码中，类与类之间的依赖关系简单清晰。
 * 即使两个类有依赖关系，一个类的代码改动也不会或者很少导致依赖类的代码改动。
 * </p>
 */
public class LOD {
}
